<?php


/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */

function material_help($path, $arg) {
  switch ($path) {
    // Main module help for the block module
    case 'admin/help#material':

    	// incluye el archivo de ayuda
    	module_load_include('inc', 'material', 'material_help');
		
		return return_help();

  	}
}

/**
 * Implements hook_menu().
 */
function material_menu() {
  $items = array();



  $items['admin/config/material'] = array(
    'title' => 'Módulo material',
    'description' => 'Configuracio modul material',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('material_config_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );



  return $items;
}


/**
 * Determine whether the current user has the role specified.
 *
 * @param string $role_name
 *   The role required for access
 *
 * @return bool
 *   True if the acting user has the role specified.
 */
function menu_example_custom_access($role_name) {
  $access_granted = in_array($role_name, $GLOBALS['user']->roles);
  return $access_granted;
}


// Incluimos menu de administración
module_load_include('inc', 'material', 'material_config');

/*
* Implements hook_form_alter().
*/
function material_form_alter(&$form, &$form_state, $form_id) {

  switch ($form_id) {
    

    case "taxonomy_form_term":

      // ocultamos elementos innecesarios
      $form['description']['#access'] = FALSE;
      $form['relations']['#access'] = FALSE;
      
      // http://www.zyxware.com/articles/3567/drupal-pathauto-drupal-7-how-to-hide-the-url-path-settings-fieldset
      $form['#after_build'][] = 'custom_after_build';
    
      break;

    case "solicitud_material_node_form":


      // extraer valor de lista de seleccion Material

      $listaMateriales = $form['field_material']['und']['#options'];

      foreach ($listaMateriales as $key => $material) {
        # code...
        if ($material == "Otros"){
          $idOtros = $key;
        }

      }



      // muestra oculta el campo segun lo que selecionemos
      // http://www.alexweber.com.br/en/articles/conditional-fields-drupal-7-states

      $form['field_otro']['#states'] = array(
          'visible' => array(
              ':input[name="field_material[und]"]' => array(
                  array('value' => $idOtros),
              ),
          ),
          'required' => array(
              ':input[name="field_material[und]"]' => array(
                  array('value' => $idOtros),
              ),
          ),

      );



      // hide title
      $form['title']['#required'] = FALSE;
      // Remove the next line if you still want the title field to be visible
      $form['title']['#type'] = 'hidden';
      //$form['title']['#default_value'] = 'hola';

      //custom submit callback
      //$form['#submit'][] = 'material_new_edit_form_submit';


      /// llamda a la funcion de validacion
      $form['#validate'][] = 'material_form_validate';

      break;

    
    default:
      
      // muestra el id de todos los formularios ideal para modificarlos en esta funcion
      dpm($form_id);

      dpm($form);
      break;
  }

}


function custom_after_build($form, &$form_state) {
  $form['path']['#access'] = FALSE;
  //$form['menu']['#access'] = FALSE;
  return ($form); 
} 


// Register View API information.
// Hace que se cargue el archivo mymodule.views_default.inc

function material_views_api() {
    return array (
      'api' => 3.0,
      );
}


/**
 CALCULAR TITULO

*/
function material_node_presave($node){
  if ($node->type === 'solicitud_material'){

    // cogemos el nombre del termino para añadir al título
    $term = $node->field_material['und'][0]['tid'];
    $term = taxonomy_term_load($term);
    $term = $term->name;
    
    // si es otro cogemos el valor del campo otros
    if($term == "Otros"){
      $node->title =  $node->field_otro['und'][0]['value'];
    } else {
      $node->title = $term;
    }

  }
}


/**
 VALIDAR FORMULARIO

*/


function material_form_validate($form, &$form_state) {


  // coger id de otros
  $listaMateriales = $form['field_material']['und']['#options'];

  foreach ($listaMateriales as $key => $material) {
    # code...
    if ($material == "Otros"){
      $idOtros = $key;
    }

  }

  // si coincide la id con el termino de otros, validar campo de texto
  if($form['field_material']['und']['#value'] == $idOtros){

      // valida el campo otros

      if ($form['field_otro']['und'][0]['value']['#value'] == ''){
        form_set_error('field_otro', t('El campo otro es obligatorio'));
      } elseif (strlen($form['field_otro']['und'][0]['value']['#value']) < 4) {
        form_set_error('field_otro', t('Descripcion demasiado corta'));
      }

  }


}


/**
 ENVIAR MAIL
*/


// comprovar hora

function enviarMail(){
    $dia = date('d-m');
  
    if($dia != variable_get('fecha_material_mail')){

      // incluimos fichero de envio de mails
      module_load_include('inc', 'material', 'material_email');
      variable_set('fecha_material_mail', $dia);
    } else {
      drupal_set_message(t('No se ha enviado el mail.'), 'warning');
    }
}




function material_cron(){

  enviarMail();

   
}